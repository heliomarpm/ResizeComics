name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: ResizeImages.sln
      #Test_Project_Path: your-test-project-path                 # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
      #Wap_Project_Directory: your-wap-project-directory-name    # Replace with the Wap project directory relative to the solution, i.e. MyWpfApp.Package.
      #Wap_Project_Path: your-wap-project-path                   # Replace with the path to your Wap project, i.e. MyWpf.App.Package\MyWpfApp.Package.wapproj.

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    # - name: Setup MSBuild.exe
    #   uses: microsoft/setup-msbuild@v1.0.2

    # Execute all unit tests in the solution
    #- name: Execute unit tests
    #  run: dotnet test

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    # - name: Restore the application
    #   run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
    #   env:
    #     Configuration: ${{ matrix.configuration }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build project
      run: dotnet build --configuration Release

    # - name: Publish application
    #   run: dotnet publish --configuration Release --output ./publish/win-x64 --runtime win-x64

    - name: see directory
      run: dir "ResizeImages/bin/release"

    #- name: Publish application
    #  run: dotnet publish --configuration Release --output ./publish/win-x64 --runtime win-x64

    - name: Compress files
      run: |
        7z a ResizeIt.zip "ResizeImages/bin/release/net7.0-windows/*"

    - name: see directory
      run: dir 

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        # body: |
        #   Changes in this release:
        #   - Add feature X
        #   - Fix issue Y
        body: |
          #${{ github.ref }}
          ![](https://img.shields.io/github/downloads/heliomarpm/resize-comics/${{ github.ref }}/total)
        draft: true
        prerelease: true

    # Upload the MSIX package: https://github.com/marketplace/actions/upload-a-build-artifact
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ResizeIt
        path: ResizeIt.zip

    - name: Publish to Release
      uses: softprops/action-gh-release@v1
      with:
        files: ResizeIt.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
